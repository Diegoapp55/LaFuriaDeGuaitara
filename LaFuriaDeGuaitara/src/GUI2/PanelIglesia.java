/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI2;

import GUI.PantallaJuego;
import GUIsoundManagement.Efectos;
import data.ItemPickeable;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.Serializable;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author HP
 */
public class PanelIglesia extends javax.swing.JPanel implements KeyListener, Serializable{
    Icon img;
    Efectos fx = new Efectos();
    
    int velocidad = 5;
    public static ItemPickeable rubi = new ItemPickeable("Encapsulita", "Este rub√≠ de sangre"
            + " puede aislar a su portador del mundo real.", 0, 0, "/src/Images/Sprites/item/2_rubySheet.png");
    /**
     * Creates new form PanelJuego
     */
    public PanelIglesia() {
        Window.TEMA_JUEGO.stop();
        Window.TEMA_JUEGO.playGamePlay();
        img = PanelCrearPartida.img;
        initComponents();
        PanelCrearPartida.partida.setPanelActual(this);
        addKeyListener(this);
        setFocusable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        l = new javax.swing.JLabel();
        door = new javax.swing.JLabel();
        rubiObj = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setLayout(null);

        PanelCrearPartida.l = l;
        l.setVisible(true);
        l.setIcon(PanelCrearPartida.img);
        l.setPreferredSize(new java.awt.Dimension(50, 50));
        l.setLocation(PanelIglesia.guardaPosX(), PanelIglesia.guardaPosY());
        add(l);
        l.setBounds(150, 270, 60, 60);

        door.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/objetos/door.png"))); // NOI18N
        add(door);
        door.setBounds(640, 250, 50, 90);

        rubiObj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/objetos/ruby.gif"))); // NOI18N
        rubiObj.setToolTipText("");
        add(rubiObj);
        rubiObj.setBounds(585, 110, 25, 25);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Mapas/iglesia.png"))); // NOI18N
        add(background);
        background.setBounds(0, 0, 800, 600);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel door;
    public static javax.swing.JLabel l;
    private javax.swing.JLabel rubiObj;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {}

    @Override
    public void keyPressed(KeyEvent e) {
        switch (e.getKeyCode()){
            case KeyEvent.VK_UP :
                if(l.getY() >= 92){
                    l.setLocation(l.getX(), l.getY() - velocidad);
                }else{
                    l.setLocation(l.getX(), l.getY() - 0);
                }
                break;
            
            case KeyEvent.VK_DOWN :
                if(l.getY() <= 453){
                    l.setLocation(l.getX(), l.getY() + velocidad);
                }else{
                    l.setLocation(l.getX(), l.getY() + 0);
                }
                break;
            
            case KeyEvent.VK_LEFT :
                if(l.getX() >= 147){
                    l.setLocation(l.getX() - velocidad, l.getY());
                }else{
                    l.setLocation(l.getX() - 0, l.getY());
                }
                break;
            
            case KeyEvent.VK_RIGHT :
                if(l.getX() <= 616){
                    l.setLocation(l.getX() + velocidad, l.getY());
                }else{
                    l.setLocation(l.getX() + 0, l.getY());
                }
                break;
                
            case KeyEvent.VK_SHIFT :
                velocidad = 10;
                break;

            case KeyEvent.VK_SPACE:
                //Puerta
                if((l.getX() >= 608 && l.getX() <= 650) && (l.getY() >= 260 && l.getY() <= 322)){
                    //Window.TEMA_JUEGO.stop();
                    fx.playPuerta();
                    PantallaJuego pj =  new PantallaJuego();
                    pj.setVisible(true);
                    pj.dispose();
                    this.setVisible(false);
                    cargarPasillo();
                }
                //Item
                if((l.getX() >= 539 && l.getX() <= 610) && (l.getY() >= 92 && l.getY() <= 135)){
                    rubi.setRecogido(true);
                    guardaPosX();
                    guardaPosY();
                    l.setLocation(guardaPosX(), guardaPosY());
                    rubiObj.setVisible(false);
                    fx.playItem();
                    PanelCrearPartida.inventario.add(rubi);
                    l.setLocation(guardaPosX(), guardaPosY());
                }
                break;
            
            
            case KeyEvent.VK_ESCAPE:
                guardaPosX();
                guardaPosY();
                fx.playPausa();
                cargarPausa();
                break;
            
            
            case KeyEvent.VK_I:
                guardaPosX();
                guardaPosY();
                fx.playPausa();
                cargarInventario();
                break;
            
        }
    }
    
    @Override
    public void keyReleased(KeyEvent e) {
        switch (e.getKeyCode()){
            case KeyEvent.VK_SHIFT :
                velocidad = 5;
                break;
        }
    }
    
    public void cargarPasillo(){
        PanelPasillo pj = new PanelPasillo();
        pj.setSize(Window.getJpanel().getWidth(), Window.getJpanel().getHeight());
        pj.setLocation(0,0);
        
        Window.getJpanel().removeAll();
        Window.getJpanel().add(pj);
        Window.getJpanel().revalidate();
        Window.getJpanel().repaint();
    }
    
    public void cargarPausa(){
        PanelMenuPausa pm = new PanelMenuPausa();
        pm.setSize(Window.getJpanel().getWidth(), Window.getJpanel().getHeight());
        pm.setLocation(0,0);
        
        Window.getJpanel().removeAll();
        Window.getJpanel().add(pm);
        Window.getJpanel().revalidate();
        Window.getJpanel().repaint();
    }
    
    public void cargarInventario(){
        PanelInventario pm = new PanelInventario();
        pm.setSize(Window.getJpanel().getWidth(), Window.getJpanel().getHeight());
        pm.setLocation(0,0);
        
        Window.getJpanel().removeAll();
        Window.getJpanel().add(pm);
        Window.getJpanel().revalidate();
        Window.getJpanel().repaint();
    }
    
    public static int guardaPosX()
    {
        int posX = 0;
        posX = l.getX();
        return posX;
    }
    
    public static int guardaPosY()
    {
        int posY = 0;
        posY = l.getY();
        return posY;
    }
    
}
